#!/usr/bin/env node
// Generated by CoffeeScript 1.3.3
var ArgumentParser, add, args, assert, max, min, parser, sum;

ArgumentParser = require('../lib/argparse').ArgumentParser;

parser = new ArgumentParser({
  debug: true,
  description: 'Argparse example: Python 16.4.1 example'
});

assert = require('assert');

add = function(a, b) {
  return a + b;
};

sum = function(a) {
  return a.reduce(add, 0);
};

sum._name = 'sum';

assert.equal(sum([1, 2, 3]), 6);

max = function(a) {
  return Math.max.apply(Math, a);
};

max._name = 'max';

min = function(a) {
  return Math.min.apply(Math, a);
};

parser.addArgument(['integers'], {
  metavar: 'N',
  nargs: '*',
  type: 'int',
  help: 'an integer for the accumulator'
});

parser.addArgument(['--sum'], {
  dest: 'accumulate',
  action: 'storeConst',
  constant: sum,
  defaultValue: max,
  help: 'sum the integers (default: find the max)'
});

console.log(process.argv);

console.log(parser.parseKnownArgs());

args = parser.parseArgs();

console.log(args);

console.log("" + args.accumulate._name + "(" + args.integers + ")=", args.accumulate(args.integers));

if (args.integers.length === 0) {
  console.log(parser.formatHelp());
}

args = parser.parseArgs(['--sum', '-7', '1', '42']);

assert.equal(args.accumulate(args.integers), 36);
